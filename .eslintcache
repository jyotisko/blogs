[{"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\index.js":"1","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\App.js":"2","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Create.js":"3","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\BlogDetails.js":"4","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Edit.js":"5","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\NotFound.js":"6","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\NavBar.js":"7","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Home.js":"8","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Search.js":"9","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\BlogList.js":"10","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Signup.js":"11","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Login.js":"12","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\firebase.js":"13","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Account.js":"14","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\AuthorInfo.js":"15","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Bookmarks.js":"16","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\LearnToWriteBlog.js":"17","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\hooks\\useFetch.js":"18"},{"size":237,"mtime":1615103261814,"results":"19","hashOfConfig":"20"},{"size":1889,"mtime":1615106326470,"results":"21","hashOfConfig":"20"},{"size":2887,"mtime":1615126508639,"results":"22","hashOfConfig":"20"},{"size":5189,"mtime":1615135376661,"results":"23","hashOfConfig":"20"},{"size":3793,"mtime":1615127633233,"results":"24","hashOfConfig":"20"},{"size":344,"mtime":1611491934749,"results":"25","hashOfConfig":"20"},{"size":671,"mtime":1612356504744,"results":"26","hashOfConfig":"20"},{"size":1051,"mtime":1615125365262,"results":"27","hashOfConfig":"20"},{"size":1848,"mtime":1615574023305,"results":"28","hashOfConfig":"20"},{"size":573,"mtime":1615030550248,"results":"29","hashOfConfig":"20"},{"size":2354,"mtime":1615574221204,"results":"30","hashOfConfig":"20"},{"size":1467,"mtime":1611748216871,"results":"31","hashOfConfig":"20"},{"size":525,"mtime":1612263497534,"results":"32","hashOfConfig":"20"},{"size":5203,"mtime":1615102748699,"results":"33","hashOfConfig":"20"},{"size":2334,"mtime":1615102668868,"results":"34","hashOfConfig":"20"},{"size":1802,"mtime":1615102631562,"results":"35","hashOfConfig":"20"},{"size":913,"mtime":1615106741196,"results":"36","hashOfConfig":"20"},{"size":933,"mtime":1615125335159,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"lafqcf",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\index.js",[],["80","81"],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\App.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Create.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\BlogDetails.js",["82"],"import { useHistory, useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport gfm from 'remark-gfm';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter'\r\nimport useFetch from '../hooks/useFetch';\r\nimport { app } from './../firebase';\r\nimport icons from './../assets/icons.svg';\r\n\r\nconst BlogDetails = ({ user }) => {\r\n\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const [blog, isPending, error] = useFetch(`${process.env.REACT_APP_API_URL}blogs/${id}`);\r\n  const [isBookmarked, setIsBookmarked] = useState(false);\r\n  const [isReady, setIsReady] = useState(false);\r\n\r\n  const deleteBlog = () => {\r\n    fetch(`${process.env.REACT_APP_API_URL}blogs/${id}`,\r\n      { method: 'DELETE' }\r\n    ).then(_ => history.push('/'));\r\n  };\r\n\r\n  useEffect(() => {\r\n    let loadingToast;\r\n    if (isPending) loadingToast = toast.loading('Loading...');\r\n    else toast.dismiss(loadingToast);\r\n  }, [isPending]);\r\n\r\n  useEffect(() => {\r\n    error && toast.error('Something went wrong', { duration: 5000 });\r\n  }, [error]);\r\n\r\n  useEffect(() => {\r\n    if (!blog) return;\r\n\r\n    (async () => {\r\n      try {\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}bookmarks/?userID=${app.auth().currentUser.uid}&blogID=${id}`);\r\n        const data = await res.json();\r\n        data.results === 0 ? setIsBookmarked(false) : setIsBookmarked(true);\r\n        setIsReady(true);\r\n\r\n      } catch (err) {\r\n        toast.error('Something went wrong! Failed to fetch.', { duration: 5000 });\r\n      }\r\n    })();\r\n\r\n  }, [blog]);\r\n\r\n  const removeBookmark = async () => {\r\n    let loadingToast = toast.loading('Removing bookmark...');\r\n    try {\r\n      await fetch(`${process.env.REACT_APP_API_URL}bookmarks?blogID=${id}&userID=${app.auth().currentUser.uid}`, {\r\n        method: 'DELETE'\r\n      });\r\n      setIsBookmarked(false);\r\n      toast.dismiss(loadingToast);\r\n    } catch (err) {\r\n      toast.dismiss(loadingToast);\r\n      toast.error('Something went wrong! Failed to fetch.', { duration: 5000 });\r\n    }\r\n  };\r\n\r\n  const addBookmark = async () => {\r\n    let loadingToast = toast.loading('Adding bookmark...');\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}bookmarks`, {\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n          blogID: id,\r\n          userID: app.auth().currentUser.uid\r\n        }),\r\n        headers: { 'Content-Type': 'application/json' }\r\n      });\r\n      await res.json();\r\n      setIsBookmarked(true);\r\n      toast.dismiss(loadingToast);\r\n    } catch (err) {\r\n      toast.dismiss(loadingToast);\r\n      toast.error('Something went wrong! Failed to fetch.', { duration: 5000 });\r\n    }\r\n  };\r\n\r\n  const handleBookmarkClick = async () => {\r\n    try {\r\n      if (isBookmarked) {\r\n        await removeBookmark();\r\n      } if (!isBookmarked) {\r\n        await addBookmark();\r\n      }\r\n    } catch (err) {\r\n      toast.error('Something went wrong! Failed to fetch.', { duration: 5000 });\r\n    }\r\n  };\r\n\r\n  const SVGImage = ({ isBookmarked }) => {\r\n    return (\r\n      <svg className='svg-bookmark' onClick={handleBookmarkClick}>\r\n        <use xlinkHref={`${icons}#icon-bookmark${isBookmarked ? '-fill' : ''}`} />\r\n      </svg>\r\n    );\r\n  };\r\n\r\n  const renderers = {\r\n    code: ({ language, value }) => {\r\n      return <SyntaxHighlighter language={language} children={value} />\r\n    }\r\n  };\r\n\r\n  const getFormattedKeywords = keywords => {\r\n    if (keywords === '') return;\r\n    const formatted = keywords.split(',').map(el => `#${el.trim().replaceAll(' ', '-')}`).join(' ');\r\n    return formatted;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {user ? (\r\n        <div className='blog-details'>\r\n          {\r\n            error && <div>Something went wrong...</div>\r\n          }\r\n          {\r\n            isReady && <article>\r\n              <h2 className='blog-title'>{blog.blog.title}</h2>\r\n              <p className='written-by-author'>Written by <a href={`/user/${blog.blog.userID}`}>{blog.blog.author}</a></p>\r\n              <SVGImage isBookmarked={isBookmarked} />\r\n              <div className='blog-body'>\r\n                <ReactMarkdown renderers={renderers} plugins={[gfm]} source={blog.blog.body} />\r\n              </div>\r\n              <h5 className='keywords'>{getFormattedKeywords(blog.blog.keywords)}</h5>\r\n              {\r\n                blog.blog.userID === app.auth().currentUser.uid || app.auth().currentUser.uid === process.env.REACT_APP_ADMIN_UID ? (\r\n                  <>\r\n                    <button onClick={deleteBlog} className='delete-blog'>Delete</button>\r\n                    <Link to={`/edit/${blog.blog._id}`}><button>Edit</button></Link>\r\n                  </>\r\n                ) : ''\r\n              }\r\n            </article>\r\n          }\r\n        </div>\r\n      ) : (\r\n        <h4 className='login-to-view'><Link to='/login'>Login</Link> to view blog.</h4>\r\n      )}\r\n      <Toaster toastOptions={{\r\n        className: 'toast-element'\r\n      }} position='bottom-center' />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default BlogDetails;","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Edit.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\NotFound.js",["83"],"import NotFoundIcon from '../assets/notFound.svg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className='not-found'>\r\n      <img src={NotFoundIcon} />\r\n      <h2>Looks like you are lost...</h2>\r\n      <h4>Go to <Link to='/'>Home</Link> page?</h4>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\NavBar.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Home.js",["84"],"import { useState, useEffect } from \"react\";\r\nimport BlogList from \"./BlogList\";\r\nimport useFetch from '../hooks/useFetch';\r\nimport { Link } from 'react-router-dom';\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nconst Home = ({ user }) => {\r\n\r\n  const [data, isPending, error] = useFetch(`${process.env.REACT_APP_API_URL}blogs`);\r\n\r\n  useEffect(() => {\r\n    let loadingToast;\r\n    if (isPending) loadingToast = toast.loading('Loading...');\r\n    else toast.dismiss(loadingToast);\r\n  }, [isPending]);\r\n\r\n  useEffect(() => {\r\n    if (error) toast.error('Something went wrong...', { duration: 5000 });\r\n  }, [error]);\r\n\r\n  return (\r\n    <div className='home'>\r\n      {user ? (\r\n        <>\r\n          {data && <BlogList blogs={data.blogs} title='All Blogs!' />}\r\n        </>\r\n      ) : (\r\n        <h4 className='login-to-view'><Link to='/login'>Login</Link> to view blogs</h4>\r\n      )\r\n      }\r\n      <Toaster toastOptions={{\r\n        className: 'toast-element'\r\n      }} position='bottom-center' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Search.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\BlogList.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Signup.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Login.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\firebase.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Account.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\AuthorInfo.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\Bookmarks.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\components\\LearnToWriteBlog.js",[],"C:\\My Garbage\\Web Development\\React.js\\blog\\blog\\src\\hooks\\useFetch.js",["85"],"import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = url => {\r\n\r\n  const abortController = new AbortController();\r\n\r\n  const [data, setData] = useState(null);\r\n  const [isPending, setIsPending] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(url, {\r\n      signal: abortController.signal,\r\n    })\r\n      .then(res => {\r\n        if (!res.ok) throw new Error('Failed to fetch');\r\n        else return res.json();\r\n      })\r\n      .then(dataFromApi => {\r\n        setData(dataFromApi);\r\n        setIsPending(false);\r\n        setError(null);\r\n      })\r\n      .catch(err => {\r\n        if (err.name === 'AbortError') console.log('fetch aborted');\r\n        else {\r\n          setError(err.message);\r\n          setIsPending(false);\r\n        }\r\n      });\r\n    return () => abortController.abort();\r\n  }, [url]);\r\n\r\n  return [data, isPending, error];\r\n\r\n};\r\n\r\nexport default useFetch;\r\n",["86","87"],{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":51,"column":6,"nodeType":"94","endLine":51,"endColumn":12,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":7,"column":7,"nodeType":"98","endLine":7,"endColumn":33},{"ruleId":"99","severity":1,"message":"100","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":18},{"ruleId":"92","severity":1,"message":"103","line":32,"column":6,"nodeType":"94","endLine":32,"endColumn":11,"suggestions":"104"},{"ruleId":"88","replacedBy":"105"},{"ruleId":"90","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["109"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'abortController'. Either include it or remove the dependency array.",["110"],["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [blog, id]",{"range":"115","text":"116"},"Update the dependencies array to be: [abortController, url]",{"range":"117","text":"118"},[1711,1717],"[blog, id]",[852,857],"[abortController, url]"]